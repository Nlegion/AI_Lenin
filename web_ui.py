import gradio as gr
from core import LeninAI
import time
import random
import os

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
lenin_ai = LeninAI()

# –°–ª—É—á–∞–π–Ω—ã–µ –ª–µ–Ω–∏–Ω—Å–∫–∏–µ —Ñ—Ä–∞–∑—ã –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
LENIN_GREETINGS = [
    "–ü—Ä–æ–ª–µ—Ç–∞—Ä–∏–∏ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω, —Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å!",
    "–£—á–∏—Ç—å—Å—è, —É—á–∏—Ç—å—Å—è –∏ —É—á–∏—Ç—å—Å—è!",
    "–°–æ—Ü–∏–∞–ª–∏–∑–º - —ç—Ç–æ —Å–æ–≤–µ—Ç—Å–∫–∞—è –≤–ª–∞—Å—Ç—å –ø–ª—é—Å —ç–ª–µ–∫—Ç—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –≤—Å–µ–π —Å—Ç—Ä–∞–Ω—ã.",
    "–ö–∞–∂–¥–∞—è –∫—É—Ö–∞—Ä–∫–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—É—á–∏—Ç—å—Å—è —É–ø—Ä–∞–≤–ª—è—Ç—å –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ–º.",
    "–ú–∏—Ä —Ö–∏–∂–∏–Ω–∞–º, –≤–æ–π–Ω–∞ –¥–≤–æ—Ä—Ü–∞–º!"
]


def respond(message, history):
    start_time = time.time()

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞
    response, sources = lenin_ai.generate_response(message)
    latency = time.time() - start_time

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    sources_text = ""
    if sources:
        sources_text = "\n\n–ò—Å—Ç–æ—á–Ω–∏–∫–∏:\n" + "\n".join(
            f"- {src['title']}, –¢–æ–º {src['volume']}, —Å—Ç—Ä. {src['pages']}"
            for src in sources[:2]  # –ù–µ –±–æ–ª–µ–µ 2 –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        )

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
    formatted_response = f"{response}{sources_text}\n\n[–í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {latency:.1f} —Å–µ–∫ | –¢–æ—á–Ω–æ—Å—Ç—å: {lenin_ai.get_stats()['cache_hit_rate']}]"

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–∏—è
    return "", history + [[message, formatted_response]]


# –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
with gr.Blocks(
        title="–ò–ò-–õ–µ–Ω–∏–Ω",
        theme=gr.themes.Soft(),
        css=".message { font-size: 18px !important; }"
) as demo:
    gr.Markdown(f"## üö© –î–∏–∞–ª–æ–≥ —Å –í–ª–∞–¥–∏–º–∏—Ä–æ–º –ò–ª—å–∏—á–æ–º –õ–µ–Ω–∏–Ω—ã–º")
    gr.Markdown(f"> *{random.choice(LENIN_GREETINGS)}*")
    gr.Markdown("> –¶–∏—Ñ—Ä–æ–≤–∞—è —Ä–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ 55 —Ç–æ–º–æ–≤ –ü–æ–ª–Ω–æ–≥–æ –°–æ–±—Ä–∞–Ω–∏—è –°–æ—á–∏–Ω–µ–Ω–∏–π")
    gr.Markdown("> **–í–∞–∂–Ω–æ:** –í—Å–µ –æ—Ç–≤–µ—Ç—ã —Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω—ã –ò–ò –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö —Ç—Ä—É–¥–æ–≤")

    with gr.Row():
        with gr.Column(scale=3):
            chatbot = gr.Chatbot(
                height=500,
                bubble_full_width=False,
                avatar_images=(
                    "user_avatar.png",
                    "lenin_avatar.png"
                )
            )
            msg = gr.Textbox(
                label="–í–∞—à –≤–æ–ø—Ä–æ—Å",
                placeholder="–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ –º–∞—Ä–∫—Å–∏–∑–º–µ-–ª–µ–Ω–∏–Ω–∏–∑–º–µ...",
                lines=2
            )
            with gr.Row():
                submit_btn = gr.Button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å", variant="primary")
                clear_btn = gr.Button("–û—á–∏—Å—Ç–∏—Ç—å")
        with gr.Column(scale=1):
            gr.Markdown("**–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:**")
            gr.Examples(
                examples=[
                    "–û–±—ä—è—Å–Ω–∏—Ç–µ —Ç–µ–æ—Ä–∏—é –∏–º–ø–µ—Ä–∏–∞–ª–∏–∑–º–∞",
                    "–í —á—ë–º —Å—É—â–Ω–æ—Å—Ç—å –¥–∏–∫—Ç–∞—Ç—É—Ä—ã –ø—Ä–æ–ª–µ—Ç–∞—Ä–∏–∞—Ç–∞?",
                    "–ö–∞–∫–æ–≤–∞ —Ä–æ–ª—å –ø–∞—Ä—Ç–∏–∏ –≤ —Ä–µ–≤–æ–ª—é—Ü–∏–∏?",
                    "–ß—Ç–æ —Ç–∞–∫–æ–µ —Ç–æ–≤–∞—Ä–Ω—ã–π —Ñ–µ—Ç–∏—à–∏–∑–º?",
                    "–ö–∞–∫ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —Ä–µ–ª–∏–≥–∏–∏ –Ω–∞—É—á–Ω—ã–π —Å–æ—Ü–∏–∞–ª–∏–∑–º?"
                ],
                inputs=msg
            )
            stats = gr.Textbox(
                label="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã",
                value=lenin_ai.get_stats(),
                interactive=False
            )
            gr.Button("–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É").click(
                fn=lambda: lenin_ai.get_stats(),
                outputs=stats
            )

    msg.submit(respond, [msg, chatbot], [msg, chatbot])
    submit_btn.click(respond, [msg, chatbot], [msg, chatbot])
    clear_btn.click(lambda: ("", []), outputs=[msg, chatbot])

if __name__ == "__main__":
    demo.launch(
        server_port=7860,
        share=False,
        favicon_path="lenin_icon.png" if os.path.exists("lenin_icon.png") else None
    )